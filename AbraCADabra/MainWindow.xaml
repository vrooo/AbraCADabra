<Window x:Class="AbraCADabra.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:otk="clr-namespace:OpenTK;assembly=OpenTK.GLControl"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:AbraCADabra"
        mc:Ignorable="d"
        x:Name="_this" Title="AbraCADabra" Height="800" Width="1200" MinHeight="200" MinWidth="400" WindowState="Maximized"
        KeyDown="OnKeyDown">

    <Window.Resources>
        <Style TargetType="{x:Type ListBoxItem}">
            <EventSetter Event="MouseDoubleClick" Handler="ListBoxItemDoubleClick"/>
        </Style>
        <!--<Style TargetType="ScrollBar">
            <Setter Property="Background" Value="#181b2e"/>
            <Setter Property="Foreground"  Value="#2a3157"/>
            <Setter Property="BorderBrush" Value="#181b2e"/>
        </Style>-->
        <BooleanToVisibilityConverter x:Key="BoolVisConverter"/>
    </Window.Resources>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem x:Name="MenuNew" Header="New Scene" Click="MenuNewClick"/>
                <MenuItem x:Name="MenuOpen" Header="Open Scene..." Click="MenuOpenClick"/>
                <MenuItem x:Name="MenuSave" Header="Save Scene..." Click="MenuSaveClick"/>
                <Separator/>
                <MenuItem x:Name="MenuReset" Header="Reset camera" Click="MenuResetClick"/>
            </MenuItem>
            <MenuItem x:Name="MenuMilling" Header="Milling" IsEnabled="{Binding IsIdle}">
                <MenuItem x:Name="MenuMillingLoad" Header="Load Milling Path..." Click="MenuMillingLoadClick"/>
                <MenuItem x:Name="MenuMillingGenerate" Header="Generate Milling Path..." Click="MenuMillingGenerateClick"/>
                <Separator/>
                <MenuItem x:Name="MenuMillingScale" Header="Scale..." Click="MenuMillingScaleClick"/>
                <MenuItem x:Name="MenuMillingAlign" Header="Align to Material" Click="MenuMillingAlignClick"/>
            </MenuItem>
        </Menu>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="250"/>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0">
                <ProgressBar x:Name="ProgressBarMain" DockPanel.Dock="Bottom" Height="20"/>
                <WindowsFormsHost x:Name="WFHost" DockPanel.Dock="Top">
                    <otk:GLControl x:Name="GLMain"
                           Load="OnLoad" Paint="OnRender" Disposed="OnDisposed"
                           MouseMove="OnMouseMove" MouseWheel="OnMouseScroll" MouseDown="OnMouseDown" MouseUp="OnMouseUp"/>
                    <WindowsFormsHost.ContextMenu>
                        <ContextMenu x:Name="ContextMain">
                            <MenuItem Header="Merge points">
                                <MenuItem x:Name="ContextMergeToFirst" Header="To first"/>
                                <MenuItem x:Name="ContextMergeToLast" Header="To last"/>
                                <MenuItem x:Name="ContextMergeToCursor" Header="To cursor"/>
                                <MenuItem x:Name="ContextMergeToCenter" Header="To center"/>
                            </MenuItem>
                            <MenuItem Header="Fill gaps" Click="FillTriangles"/>
                            <MenuItem Header="Find intersections..." Click="FindIntersections"/>
                        </ContextMenu>
                    </WindowsFormsHost.ContextMenu>
                </WindowsFormsHost>
            </DockPanel>
            <ScrollViewer Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <StackPanel Margin="3">
                    <Expander Header="Objects" IsExpanded="True">
                        <StackPanel>
                            <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                <ListBox x:Name="ListObjects" ItemsSource="{Binding}" Height="150" SelectionMode="Extended"
                                     SelectionChanged="ListObjectsSelectionChanged">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="1, 0, 0, 0" Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="[DEBUG] Empty" Click="Debug_Empty"/>
                                            <MenuItem Header="[DEBUG] Four points" Click="Debug_FourPoints"/>
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                </ListBox>
                            </ScrollViewer>
                            <DockPanel>
                                <Button DockPanel.Dock="Left" Margin="0" Click="ButtonMoveUp" Content=" ▲ "/>
                                <Button DockPanel.Dock="Left" Margin="0" Click="ButtonMoveDown" Content=" ▼ "/>
                                <Button DockPanel.Dock="Left" Margin="0" Click="ButtonDelete">Delete selected</Button>
                            </DockPanel>
                        </StackPanel>
                    </Expander>
                    
                    <Expander Header="Add object" IsExpanded="False">
                        <WrapPanel>
                            <Button Click="ButtonCreatePoint">Point</Button>
                            <Button Click="ButtonCreateBezier3C0">Bezier C0</Button>
                            <Button Click="ButtonCreateBezier3C2">Bezier C2</Button>
                            <Button Click="ButtonCreateBezier3Inter">Bezier Interpol.</Button>
                            <Button Click="ButtonCreatePatchC0">Patch C0</Button>
                            <Button Click="ButtonCreatePatchC2">Patch C2</Button>
                            <Button Click="ButtonCreateTorus">Torus</Button>
                        </WrapPanel>
                    </Expander>
                    
                    <Expander Header="Cursor" IsExpanded="False">
                        <StackPanel>
                            <TextBlock Style="{StaticResource TextBlockBasic}">World:</TextBlock>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="1,5,5,0" Text="X:"/>
                                <xctk:DecimalUpDown Grid.Column="1" VerticalAlignment="Center"
                                                x:Name="DecimalWorldX" Value="0.0"
                                                ValueChanged="DecimalWorldValueChanged"></xctk:DecimalUpDown>
                                <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="4,5,5,0" Text="Y:"/>
                                <xctk:DecimalUpDown Grid.Column="3" VerticalAlignment="Center"
                                                x:Name="DecimalWorldY" Value="0.0"
                                                ValueChanged="DecimalWorldValueChanged"></xctk:DecimalUpDown>
                                <TextBlock Grid.Column="4" VerticalAlignment="Center" Margin="4,5,5,0" Text="Z:"/>
                                <xctk:DecimalUpDown Grid.Column="5" VerticalAlignment="Center"
                                                x:Name="DecimalWorldZ" Value="0.0"
                                                ValueChanged="DecimalWorldValueChanged"></xctk:DecimalUpDown>
                            </Grid>
                            <TextBlock Style="{StaticResource TextBlockBasic}">Screen:</TextBlock>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="1,5,5,0" Text="X:"/>
                                <xctk:DecimalUpDown Grid.Column="1" VerticalAlignment="Center"
                                                x:Name="DecimalScreenX" Value="0.0"
                                                ValueChanged="DecimalScreenValueChanged"></xctk:DecimalUpDown>
                                <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="4,5,5,0" Text="Y:"/>
                                <xctk:DecimalUpDown Grid.Column="3" VerticalAlignment="Center"
                                                x:Name="DecimalScreenY" Value="0.0"
                                                ValueChanged="DecimalScreenValueChanged"></xctk:DecimalUpDown>
                                <TextBlock Grid.Column="4" VerticalAlignment="Center" Margin="4,5,5,0" Text="Z:"/>
                                <xctk:DecimalUpDown Grid.Column="5" VerticalAlignment="Center"
                                                x:Name="DecimalScreenZ" Value="0.0"
                                                ValueChanged="DecimalScreenValueChanged"></xctk:DecimalUpDown>
                            </Grid>
                        </StackPanel>
                    </Expander>
                    
                    <Expander Header="Configuration" IsExpanded="False">
                        <StackPanel>
                            <CheckBox x:Name="CheckBoxGrid" IsChecked="True"
                                  Checked="RoutedInvalidate" Unchecked="RoutedInvalidate">Show grid</CheckBox>
                            <CheckBox x:Name="CheckBoxPoints" IsChecked="False"
                                  Checked="RoutedInvalidate" Unchecked="RoutedInvalidate">Show points</CheckBox>
                            <CheckBox x:Name="CheckBoxRotateOrigin" IsChecked="False">Rotate around cursor</CheckBox>
                        </StackPanel>
                    </Expander>
                    
                    <Expander Header="Anaglyph" IsExpanded="False">
                        <StackPanel>
                            <CheckBox x:Name="CheckBoxAnaglyph" IsChecked="False"
                                  Checked="RoutedInvalidate" Unchecked="RoutedInvalidate">Enable anaglyph</CheckBox>
                            <StackPanel Margin="20, 0, 0, 0"
                                    Visibility="{Binding IsChecked,ElementName=CheckBoxAnaglyph,Converter={StaticResource BoolVisConverter}}">
                                <TextBlock Style="{StaticResource TextBlockBasic}">Eye distance:</TextBlock>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="50"/>
                                    </Grid.ColumnDefinitions>
                                    <xctk:DecimalUpDown Grid.Column="1" x:Name="DecimalEyeDistance" DockPanel.Dock="Right"
                                                    Increment=".1"
                                                    Value="{Binding ElementName=SliderEyeDistance, Path=Value, Mode=TwoWay}"/>
                                    <Slider x:Name="SliderEyeDistance" DockPanel.Dock="Left"
                                        Minimum="0" Maximum="5" Value="1"
                                        ValueChanged="ValueChangedInvalidate"/>
                                </Grid>
                                <TextBlock Style="{StaticResource TextBlockBasic}">Projection plane distance:</TextBlock>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="50"/>
                                    </Grid.ColumnDefinitions>
                                    <xctk:DecimalUpDown Grid.Column="1" x:Name="DecimalProjDistance" DockPanel.Dock="Right"
                                                    Value="{Binding ElementName=SliderProjDistance, Path=Value, Mode=TwoWay}"/>
                                    <Slider x:Name="SliderProjDistance" DockPanel.Dock="Left"
                                        Minimum="1" Maximum="500" Value="50"
                                        ValueChanged="ValueChangedInvalidate"/>
                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="50"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" VerticalAlignment="Center"
                                           Style="{StaticResource TextBlockBasic}">Left eye color:</TextBlock>
                                    <xctk:ColorPicker Grid.Column="1" x:Name="ColorPickerLeft" SelectedColor="#ff0000"
                                                  UsingAlphaChannel="False"
                                                  SelectedColorChanged="ColorChangedInvalidate"/>
                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="50"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" VerticalAlignment="Center"
                                           Style="{StaticResource TextBlockBasic}">Right eye color:</TextBlock>
                                    <xctk:ColorPicker Grid.Column="1" x:Name="ColorPickerRight" SelectedColor="#0000ff"
                                                  UsingAlphaChannel="False"
                                                  SelectedColorChanged="ColorChangedInvalidate"/>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                    </Expander>

                    <Expander x:Name="ExpanderMilling" Header="Milling">
                        <StackPanel Orientation="Vertical">
                            <CheckBox IsChecked="{Binding DisplayPath}"
                                  Checked="RoutedInvalidate" Unchecked="RoutedInvalidate">Display path</CheckBox>
                            <CheckBox IsChecked="{Binding DisplayMaterial}"
                                  Checked="RoutedInvalidate" Unchecked="RoutedInvalidate">Display material</CheckBox>
                            <CheckBox IsChecked="{Binding ShowPathOnTop}"
                                  Checked="RoutedInvalidate" Unchecked="RoutedInvalidate">Show path on top</CheckBox>

                            <StackPanel Orientation="Vertical" IsEnabled="{Binding IsIdle}">
                                <TextBlock Style="{StaticResource TextBlockBasic}">Size:</TextBlock>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="1,5,5,0" Text="X:"/>
                                    <xctk:DecimalUpDown Grid.Column="1" VerticalAlignment="Center"
                                                    Value="{Binding SizeX}" Minimum="0.001"
                                                    ValueChanged="UpDownInvalidate"></xctk:DecimalUpDown>
                                    <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="4,5,5,0" Text="Y:"/>
                                    <xctk:DecimalUpDown x:Name="DecimalSizeY" Grid.Column="3" VerticalAlignment="Center"
                                                    Value="{Binding SizeY}" Minimum="{Binding ElementName=DecimalBaseHeight, Path=Value}"
                                                    ValueChanged="UpDownInvalidate"></xctk:DecimalUpDown>
                                    <TextBlock Grid.Column="4" VerticalAlignment="Center" Margin="4,5,5,0" Text="Z:"/>
                                    <xctk:DecimalUpDown Grid.Column="5" VerticalAlignment="Center"
                                                    Value="{Binding SizeZ}" Minimum="0.001"
                                                    ValueChanged="UpDownInvalidate"></xctk:DecimalUpDown>
                                </Grid>

                                <TextBlock Style="{StaticResource TextBlockBasic}">Position:</TextBlock>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="1,5,5,0" Text="X:"/>
                                    <xctk:DecimalUpDown Grid.Column="1" VerticalAlignment="Center"
                                                    Value="{Binding PositionX}"
                                                    ValueChanged="UpDownInvalidate"></xctk:DecimalUpDown>
                                    <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="4,5,5,0" Text="Y:"/>
                                    <xctk:DecimalUpDown Grid.Column="3" VerticalAlignment="Center"
                                                    Value="{Binding PositionY}"
                                                    ValueChanged="UpDownInvalidate"></xctk:DecimalUpDown>
                                    <TextBlock Grid.Column="4" VerticalAlignment="Center" Margin="4,5,5,0" Text="Z:"/>
                                    <xctk:DecimalUpDown Grid.Column="5" VerticalAlignment="Center"
                                                    Value="{Binding PositionZ}"
                                                    ValueChanged="UpDownInvalidate"></xctk:DecimalUpDown>
                                </Grid>

                                <TextBlock Style="{StaticResource TextBlockBasic}">Divisions:</TextBlock>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="1,5,5,0" Text="X:"/>
                                    <xctk:IntegerUpDown Grid.Column="1" VerticalAlignment="Center"
                                                    Value="{Binding DivX}" Minimum="1" Maximum="2000"
                                                    ValueChanged="UpDownInvalidate"></xctk:IntegerUpDown>
                                    <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="4,5,5,0" Text="Z:"/>
                                    <xctk:IntegerUpDown Grid.Column="3" VerticalAlignment="Center"
                                                    Value="{Binding DivZ}" Minimum="1" Maximum="2000"
                                                    ValueChanged="UpDownInvalidate"></xctk:IntegerUpDown>
                                </Grid>

                                <DockPanel>
                                    <TextBlock DockPanel.Dock="Left" Style="{StaticResource TextBlockBasic}"
                                           VerticalAlignment="Center">Base height:</TextBlock>
                                    <xctk:DecimalUpDown x:Name="DecimalBaseHeight" DockPanel.Dock="Left" VerticalAlignment="Center"
                                                    Value="{Binding BaseHeight}" Minimum="0"
                                                    ValueChanged="DecimalBaseHeightChanged"></xctk:DecimalUpDown>
                                </DockPanel>

                                <DockPanel>
                                    <TextBlock DockPanel.Dock="Left" Style="{StaticResource TextBlockBasic}"
                                           VerticalAlignment="Center">Tool:</TextBlock>
                                    <ComboBox x:Name="ComboTool" DockPanel.Dock="Left" SelectedIndex="0"
                                          SelectionChanged="ComboToolSelectionChanged">
                                        <ComboBoxItem>Spherical</ComboBoxItem>
                                        <ComboBoxItem>Flat</ComboBoxItem>
                                    </ComboBox>
                                </DockPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                        <!--<ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>-->
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="1,5,5,0" Text="Diameter:"/>
                                    <xctk:DecimalUpDown Grid.Column="1" VerticalAlignment="Center"
                                                    Value="{Binding ToolDiameter}" Minimum="0.001" Increment="0.1"
                                                    ValueChanged="UpDownInvalidate"></xctk:DecimalUpDown>
                                    <!--<TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="4,5,5,0" Text="Height:"/>
                                    <xctk:DecimalUpDown Grid.Column="3" VerticalAlignment="Center"
                                                    Value="{Binding ToolHeight}" Minimum="0.001"
                                                    ValueChanged="UpDownInvalidate"></xctk:DecimalUpDown>-->
                                </Grid>
                            </StackPanel>

                            <StackPanel x:Name="StackPanelMillingStep" Orientation="Vertical">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource TextBlockBasic}"
                                           VerticalAlignment="Center">Step length:</TextBlock>
                                    <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"
                                                    Value="{Binding StepLength}" Minimum="1"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource TextBlockBasic}"
                                           VerticalAlignment="Center">Step delay:</TextBlock>
                                    <xctk:DecimalUpDown Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"
                                                    Minimum="0.001" Increment="0.001"
                                                    Value="{Binding ElementName=_this, Path=MillingStepDelay}"/>
                                </Grid>
                            </StackPanel>

                            <StackPanel x:Name="StackPanelMillingButtons" Orientation="Vertical">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Button Grid.Column="0" Click="ButtonBeginMilling">Start</Button>
                                    <Button Grid.Column="1" Click="ButtonPauseMilling">Pause</Button>
                                    <Button Grid.Column="2" Click="ButtonResetMilling">Reset</Button>
                                </Grid>
                                <Button Click="ButtonMillingJumpToEnd">Jump to end</Button>
                            </StackPanel>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </DockPanel>
</Window>
